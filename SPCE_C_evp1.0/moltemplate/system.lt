SPCE {
       write("Data Atoms"){
            $atom:H1     $mol @atom:H  0.4238  0.8165  0.0000  0.5773
            $atom:H2     $mol @atom:H  0.4238 -0.8165  0.0000  0.5773
            $atom:O      $mol @atom:O -0.8476  0.0000  0.0000  0.0000
        }
        write("Data Bonds"){
            $bond:OH1      @bond:OH    $atom:H1    $atom:O
            $bond:OH2      @bond:OH    $atom:H2    $atom:O
        }
        write("Data Angles"){
            $angle:HOH     @angle:HOH    $atom:H1    $atom:O     $atom:H2
        }
        write_once("Data Masses") {
            @atom:H  1.0080
            @atom:O 15.9994
        }

        write_once("In Settings") {

        #     atom_id mass
        mass @atom:H  1.0080
        mass @atom:O 15.9994

        #           atom_i       atom_j       epsilon   sigma
        pair_coeff @atom:H      @atom:H      0.000      0.000
        pair_coeff @atom:O      @atom:O      0.1553     3.5533
        pair_coeff @atom:H      @atom:O      0.000      0.000

        #           bond_id     k_harmonic      r0
        bond_coeff @bond:OH    1000.0           1.0

        #            angle_id    k_harmonic     theta0
        angle_coeff @angle:HOH  1000.0          109.47

        group gSPCE type @atom:H @atom:O
        group hyd type @atom:H
        group oxy type @atom:O

        fix fShakeSPCE gSPCE shake 0.0001 10 100 b @bond:OH a @angle:HOH

        }

        write_once("In Init") {
            units           real
            atom_style      full
            boundary        p p p
            bond_style      harmonic
            angle_style     harmonic
            pair_style      lj/cut/coul/long 12.0 13.0
            pair_modify     mix arithmetic
            dihedral_style  harmonic
            kspace_style    pppm 1.0e-5
            kspace_modify   gewald 0.29
        }
}

wat = new SPCE[901]

Graphene {
           write("Data Atoms"){
            $atom:C      $mol @atom:C  0.0000  0.0000  0.0000  0.0000
        }
        write("Data Bonds"){
        }
        write("Data Angles"){
        }
        write_once("Data Masses") {
            @atom:C  12.0107
        }

        write_once("In Settings") {
        #     atom_id mass
        mass  @atom:C  12.0107

        # These Lennard-Jones parameters come from
        #  R. Saito, R. Matsuo, T. Kimura, G. Dresselhaus, M.S. Dresselhaus,
        #  Chem Phys Lett, 348:187 (2001)
        pair_coeff  @atom:C      @atom:C     0.068443   3.407

        # --- We must eventually specify the interactions between the atoms ---
        # --- in different molecule types (graphene-water interactions).    ---
        # (See Laurent Joly, J. Chem. Phys. 135(21):214705 (2011) for details
        pair_coeff  @atom:C      @atom:SPCE/O      0.114     3.28
        pair_coeff  @atom:C      @atom:SPCE/H      0.0       3.28


        # Define a group consisting of only carbon atoms in graphene molecules
        group gGraphene type @atom:C

        # Only the gGraphene atoms are immobile.
        group mobile subtract all gGraphene

        # Use "neigh_modify" to turn off calculation of interactions between immobilized
        # atoms. (Note: group "gGraphene" was defined in the file "system.insettings")
        neigh_modify exclude group gGraphene gGraphene

        }


}

graphene = new Graphene[1344]

# ------------------------------------------------------------------

write_once("Data Boundary"){
   -1.0  31.0 xlo xhi
   -1.0  31.0 ylo yhi
   -1.0 101.0 zlo zhi
}

write_once("In Output"){
     thermo 100
     dump 1 all custom 100 dump.lammpstrj id mol type x y z ix iy iz
}

write_once("In Run"){

# 速度の割り当て
velocity         all create 298.0 4928459

timestep 1.0

thermo_style custom step temp pe etotal press vol atoms  

neigh_modify every 1 delay 0 check yes

#　制御に用いる変数(QA)
variable          step equal step #ステップ数
variable          density equal density #密度
variable          temp equal temp　#温度
variable          etotal equal etotal #総エネルギー
variable          pxx equal pxx #圧力
variable          pyy equal pyy
variable          pzz equal pzz
variable          lx equal lx　#boxの大きさ
variable          ly equal ly
variable          lz equal lz
variable          zlo equal zlo　#boxの境界
variable          zhi equal zhi
variable          xlo equal xlo
variable          xhi equal xhi
variable          ylo equal ylo
variable          yhi equal yhi
variable          pe equal pe　#ポテンシャルエネルギー

#change_box all boundary p p f

# 削除平面作成
# ? 範囲指定
#region top plane 0 0 100 0 0 -1 units box
#region top plane 0 0 100 0 0 -1 units lattice
#fix wall all wall/region top lj93 0.0 0.0 1.0

# Solvent(water) evapolation region setting (top 10% box region)
region top block -1 31 -1 31 90 101

# Solvent evapolation (30 atoms = 10 water molecules per 1000 steps)
fix evp mobile evaporate 1000 30 top 49892  molecule yes
compute myTemp mobile temp
compute_modify myTemp dynamic/dof yes

#　? 削除
#delete_atoms region top compress yes

# -- run protocols ---

fix 1 mobile npt temp 298.0 298.0 100.0 iso 1.0 1.0 1000.0
 run 10000
unfix 1

fix 2 mobile nvt temp 298.0 298.0 100.0
 run 20000
unfix 2

#rdfの計算
#compute	myRDF oxy rdf 50 cutoff 13.0
#fix		fout2 oxy ave/time 1000 10 10000 c_myRDF[*] file tmp.rdf mode vector

fix 3 mobile nve
 run 10000
unfix 3

write_restart   system.restart
}
